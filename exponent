# Recursive Proc
(define (expt b n)
    (if (= b 0)
        1
        (* b (expt b (- n 1)))))

# Iterative Proc
(define (expt b n)
    (expt-iter b n 1))

(define (expt-iter b count product)
    (if (= counter 0)
        product
        (expt-iter b (- count 1) (* b product))))
